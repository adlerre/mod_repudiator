name: mod_repudiator CI

on: [ push, pull_request ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [ regex, pcre2 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set Variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: sudo apt -y install gcc apache2-dev libmaxminddb-dev libpcre2-dev

      - if: ${{ matrix.build == 'regex' }}
        name: Build module
        run: apxs -c -DREP_VERSION='"${{ steps.vars.outputs.branch }} (${{ steps.vars.outputs.sha_short }})"' -lmaxminddb mod_repudiator.c

      - if: ${{ matrix.build == 'pcre2' }}
        name: Build module
        run: apxs -c -DPCRE2 -DREP_VERSION='"${{ steps.vars.outputs.branch }} (${{ steps.vars.outputs.sha_short }})"' -lmaxminddb -lpcre2-8 mod_repudiator.c

      - name: Update generated-files cache on every commit
        uses: actions/cache@v4
        with:
          path: |
            .libs/mod_repudiator.so
          key: generated-files-${{ github.run_id }}-ubuntu-${{ matrix.build }}
          restore-keys: generated-files

  build-rocky:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 8, 9 ]
        build: [ regex, pcre2 ]
    container:
      image: rockylinux/rockylinux:${{ matrix.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set Variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

      - name: Install EPEL
        run: dnf -y install epel-release

      - name: Enable CRB
        run: crb enable

      - name: Install dependencies
        run: dnf -y install gcc httpd-devel libmaxminddb-devel pcre2-devel redhat-rpm-config

      - if: ${{ matrix.build == 'regex' }}
        name: Build module
        run: apxs -c -DREP_VERSION='"${{ steps.vars.outputs.branch }} (${{ steps.vars.outputs.sha_short }})"' -lmaxminddb mod_repudiator.c

      - if: ${{ matrix.build == 'pcre2' }}
        name: Build module
        run: apxs -c -DPCRE2 -DREP_VERSION='"${{ steps.vars.outputs.branch }} (${{ steps.vars.outputs.sha_short }})"' -lmaxminddb -lpcre2-8 mod_repudiator.c

      - name: Update generated-files cache on every commit
        uses: actions/cache@v4
        with:
          path: |
            .libs/mod_repudiator.so
          key: generated-files-${{ github.run_id }}-rl${{ matrix.version }}-${{ matrix.build }}
          restore-keys: generated-files

  #########################################################################################
  ## Build RPMs
  #########################################################################################
  rpm-rocky:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 8, 9 ]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/checkout@v4
        with:
          path: mod_repudiator
          fetch-depth: 0

      - name: Build Mock Environment
        uses: docker/build-push-action@v6
        with:
          tags: mock:latest
          file: mod_repudiator/.github/workflows/Dockerfile
          context: .
          pull: true
          push: false
          load: true

      - name: Set Variables
        id: vars
        run: |
          pushd .
          cd mod_repudiator
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT
          popd

      - name: Build RPM
        run: |
          sed -i "s/0.0.0/${{ steps.vars.outputs.sha_short }}/g" mod_repudiator/mod_repudiator.spec
          cat mod_repudiator/mod_repudiator.spec
          mkdir mock
          docker run --privileged --cap-add=SYS_ADMIN -t --rm -v $PWD/mod_repudiator:/root/mod_repudiator -v $PWD/mock:/var/lib/mock mock:latest sh -c "mock -r rocky+epel-${{ matrix.version }}-x86_64 --spec /root/mod_repudiator/mod_repudiator.spec --sources /root/mod_repudiator"

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: mod_repudiator-rl${{ matrix.version }}-x86_64-rpms
          path: mock/rocky+epel-${{ matrix.version }}-x86_64/result/mod_repudiator*.rpm

  #########################################################################################
  ## Build Package
  #########################################################################################
  package-ubuntu:
    runs-on: ubuntu-latest
    needs: build-ubuntu
    strategy:
      matrix:
        build: [ regex, pcre2 ]
    steps:
      - uses: actions/checkout@v4

      - name: Update generated-files cache on every commit
        uses: actions/cache@v4
        with:
          path: |
            .libs/mod_repudiator.so
          key: generated-files-${{ github.run_id }}-ubuntu-${{ matrix.build }}
          restore-keys: generated-files

      - name: Update package cache on every commit
        uses: actions/cache@v4
        with:
          path: package
          key: package-${{ github.run_id }}-ubuntu-${{ matrix.build }}
          restore-keys: package

      - name: Set Variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

      - name: Prepare package*.zip artifact
        run: |
          rm -rf package
          mkdir -p package
          rm -rf package/*.zip
          cp -f ".libs/mod_repudiator.so" "package/mod_repudiator.so"
          cp -f "mod_repudiator.conf" "package/mod_repudiator.conf"
          cd ./package

      - name: Upload package.zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: "mod_repudiator-ubuntu-${{ matrix.build }}-${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
          path: ./package

  package-rocky:
    runs-on: ubuntu-latest
    needs: build-rocky
    strategy:
      matrix:
        version: [ 8, 9 ]
        build: [ regex, pcre2 ]
    steps:
      - uses: actions/checkout@v4

      - name: Update generated-files cache on every commit
        uses: actions/cache@v4
        with:
          path: |
            .libs/mod_repudiator.so
          key: generated-files-${{ github.run_id }}-rl${{ matrix.version }}-${{ matrix.build }}
          restore-keys: generated-files

      - name: Update package cache on every commit
        uses: actions/cache@v4
        with:
          path: package
          key: package-${{ github.run_id }}-rl${{ matrix.version }}-${{ matrix.build }}
          restore-keys: package

      - name: Set Variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "branch=$(echo ${{ github.ref_name }} | tr / __)" >> $GITHUB_OUTPUT

      - name: Prepare package*.zip artifact
        run: |
          rm -rf package
          mkdir -p package
          rm -rf package/*.zip
          cp -f ".libs/mod_repudiator.so" "package/mod_repudiator.so"
          cp -f "mod_repudiator.conf" "package/mod_repudiator.conf"
          cd ./package

      - name: Upload package.zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: "mod_repudiator-rl${{ matrix.version }}-${{ matrix.build }}-${{ steps.vars.outputs.branch }}_(${{ steps.vars.outputs.sha_short }})"
          path: ./package
